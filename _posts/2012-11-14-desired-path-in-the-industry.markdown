---
layout:     post
title:      "Desired Path in the Industry"
date:       2012-11-14 11:08:01
categories: personal
---
Game development covers a very wide range of talents, on any video game credits screen you can see hundreds of roles played by hundreds of people. The main ones are well know, such as concept artist, 3D modeller, programmer, texture artist, level designer, etc, the list goes on! I'm focusing on my own preferred career here, though roles are sometimes shared depending on skills.
<!--more-->

As mentioned in my previous posts, I really enjoy programming, sometimes it's like a fun mind exercise (who needs Brain Training?) and other times it's a frustrating enigma that never seems to do what I want! When I first started, I picked it up pretty quickly and understood it's only logic so the way to learn was just thinking up something and then a combination of the best, fastest, most efficient, most user-friendly way to do it. I haven't really had any experience doing things like graphical programming or engine design the type I focus on is level coding (scripting events, interactivity etc), character attributes (stats, abilities, RPG elements) and gameplay features (tools, weapons, interactive stuff). Most of my experience comes from developing my SA:MP server, recently I learnt and practiced some OOP (object-oriented programming) in C# and Java, I then opened up my old SA:MP scripts and started to change them to this OOP way of thinking. Now before I go further I must explain that Pawn (the scripting language that SA:MP uses) is not an object-oriented language, it's all straightforward and typeless. So when I say writing code "in the style of OOP" I mean keeping all the code in a separate file, all the functions and variables related to that code is prefixed with the shortened name of that file (Similar to how you would do "class.method" or "class.field" in OOP languages) and all the data is manipulated using functions not direct addressing. Â  Okay, enough with all the programming talk, it's not my only desired career, another thing that I really like to do is level design, again this started with SA:MP as soon as I figured out how to map out custom objects and make brand new levels or areas on the existing map. I had seen a lot of map design on SA:MP in the past but finding really detailed or realistic looking maps seemed impossible for me! So I set out to design levels that were intricately detailed and well-balanced for deathmatching which is harder than you think when you have to take into account chokepoints, camping, 'over-powered' areas, team spawn points etc. "Backlot" a team death-match level I made. It's something I can't wait to try in the future on my course when we start using UDK with our own objects. The object library in GTA:SA is a bit limited so I couldn't always make what I wanted, I've used Hammer in the past too that was good but I didn't use it for long (I may fire it up again soon and have a play around!) As mentioned before, roles can cross, level design can definitely require programming if, for instance you want some kind of scripted event or interactive item. Especially if the level is also a puzzle, these are the kinds of things I'm practicing with SA:MP now, a very old yet powerful and great learning tool for programming and level design at an early stage! I'd recommend it to anyone wanting to learn more about the process of these two career paths!
